trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
  environmentName: 'dev'

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: Build and Publish Artifact
    steps:
    - task: NodeTool@0
      inputs:
        versionSource: 'spec'
        versionSpec: '20.x'
        checkLatest: true
      displayName: 'Install Node.js'
    - script: |
        cd frontend
        npm install
        npm run build
      displayName: 'Build Frontend'
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'frontend/dist'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy Build Output to Staging Directory'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/frontend.zip'
      displayName: 'Archive Build Output'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/frontend.zip'
        artifact: 'drop'
        publishLocation: 'pipeline'
      displayName: 'Publish Build Artifact'

- stage: Deploy
  displayName: Deploy
  condition: succeeded()
  dependsOn: Build
  jobs:
  - deployment: DeployToAzureAppService
    displayName: Deploy to AppService
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: 'drop'
                path: '$(System.DefaultWorkingDirectory)/drop'
              displayName: 'Download Build Artifact'
            - task: AzureWebApp@1
              inputs:
                azureSubscription: 'deployment-sc'
                appType: 'webAppLinux'
                appName: 'adder-webapp'
                package: '$(System.DefaultWorkingDirectory)/drop/frontend.zip'
                runtimeStack: 'NODE|18-lts'
                startUpCommand: 'npm run start'