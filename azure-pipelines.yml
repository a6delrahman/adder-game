trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  # Docker image names
  frontendImageName: adder-frontend
  backendImageName: adder-backend
  mongodbImageName: 'mongodb/mongodb-community-server'
  subscriptionId: 'c061fdd1-bba3-4c63-b32d-6595004a4b00'
  tenantId: '61c44f51-4973-4caf-a8de-cbde54d78efa'
  clientId: 'e12b5802-7b09-428c-900a-7fb5990597c8'
  clientSecret: 'Sa28Q~rcHxMYohQknipTZvf4R6CVO3NczgIIvdnr'

  # ACR details
  acrName: adderacr
  acrLoginServer: adderacr.azurecr.io
  acrUsername: $(az acr credential show --name adderacr --query "username" --output tsv)
  acrPassword: $(az acr credential show --name adderacr --query "passwords[0].value" --output tsv)

stages:
- stage: Build
  jobs:
  - job: BuildAndPushImages
    displayName: Build and Push Docker Images
    steps:
    - task: DockerInstaller@0
      displayName: Install Docker

    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: adderacr


    - task: Docker@2
      displayName: Build and Push Frontend Image
      inputs:
        command: buildAndPush
        repository: adder-frontend
        Dockerfile: $(Build.SourcesDirectory)/frontend/Dockerfile

    - task: AzureCLI@2
      displayName: Azure CLI Login
      inputs:
        azureSubscription: 'deployment-sc'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az login --service-principal -u $(clientId) -p $(clientSecret) --tenant $(tenantId)
          az account set --subscription $(subscriptionId)

- stage: Deploy
  jobs:
  - job: DeployToAzure
    displayName: Deploy to Azure
    steps:
    - task: AzureWebAppContainer@1
      inputs:
        azureSubscription: 'deployment-sc'
        appName: 'adder-webapp'
        containers: '$(acrLoginServer)/$(frontendImageName):$(Build.BuildId)'
        containerCommand: 'npm run build'