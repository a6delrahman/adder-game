trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
- group: adder

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: Build and Push Docker Images
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

    - script: |
        cd backend
        npm install
      displayName: 'npm install'
    
    - task: ArchiveFiles@2
      displayName: 'Archive Files'
      inputs:        
        rootFolderOrFile: '$(System.DefaultWorkingDirectory'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'drop'
        targetPath: '$(Build.ArtifactStagingDirectory)'
        publishLocation: 'pipeline'
      displayName: 'Publish npm artifact'

- stage: Deploy
  displayName: Deploy
  condition: succeeded()
  dependsOn: Build
  jobs:
  - deployment: DeployToAzureAppService
    displayName: Deploy to AppService
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureWebApp@1
              displayName: 'Azure Web App Deployment'
              inputs:
                azureSubscription: deployment-sc
                appType: webAppLinux
                appName: adder-backend
                appSettings: -CONN_STR '$(CONN_STR)' -TOKEN '$(JWT_SECRET)' -REFRESH_SECRET_KEY '$(REFRESH_SECRET_KEY)' -user '$(user)' -password '$(password)'
                package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                startUpCommand: 'npm start'
