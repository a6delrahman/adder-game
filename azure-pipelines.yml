trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
- group: adder

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: Build and Push Docker Images
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - script: |
        cd backend
        npm install -g npm
        npm install
      displayName: 'npm install'
    
    - task: ArchiveFiles@2
      displayName: 'Archive Files backend'
      inputs:        
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'drop-backend'
        targetPath: '$(Build.ArtifactStagingDirectory)'
        publishLocation: 'pipeline'
      displayName: 'Publish npm artifact backend'

    - script: |
        cd frontend
        npm install
        npm run build
      displayName: 'install and build frontend'

    - task: ArchiveFiles@2
      displayName: 'Archive Files frontend'
      inputs:        
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'drop-frontend'
        targetPath: '$(Build.ArtifactStagingDirectory)'
        publishLocation: 'pipeline'
      displayName: 'Publish npm artifact frontend'
        
- stage: Deploy
  displayName: Deploy
  condition: succeeded()
  dependsOn: Build
  jobs:
  - deployment: DeployToAzureAppService
    displayName: Deploy to AppService
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureWebApp@1
              displayName: 'Backend Deployment to AppService'
              inputs:
                azureSubscription: deployment-sc
                appType: webAppLinux
                appName: adder-backend
                appSettings: -CONN_STR '$(CONN_STR)' -TOKEN '$(SECRET_KEY)' -REFRESH_SECRET_KEY '$(REFRESH_SECRET_KEY)' -user '$(user)' -password '$(password)'
                package: $(Pipeline.Workspace)/drop-backend/$(Build.BuildId).zip
                startUpCommand: 'npm start'

            - task: AzureWebApp@1
              displayName: 'Frontend Deployment to AppService'
              inputs:
                azureSubscription: deployment-sc
                appType: webAppLinux
                appName: adder-webapp
                appSettings: '-WEBSITE_RUN_FROM_PACKAGE 0'
                package: $(Pipeline.Workspace)/drop-backend/$(Build.BuildId).zip           
